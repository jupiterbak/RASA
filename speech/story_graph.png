<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Rasa Core Visualisation</title>
    <script src="https://dagrejs.github.io/project/dagre-d3/latest/dagre-d3.min.js"></script>
    <script src="https://dagrejs.github.io/project/dagre/latest/dagre.min.js"></script>
    <script src="https://d3js.org/d3.v4.js"></script>
    <script src="https://dagrejs.github.io/project/graphlib-dot/v0.6.3/graphlib-dot.js"></script>
</head>
<body>
<div id="errormsg" style="color: #b00"></div>
<svg>
    <style>
        .node.invisible > rect {
            display: none;
        }

        .node.start > rect {
            fill: #7f7;
            rx: 30;
            ry: 18;
        }

        .node.end > rect {
            fill: #f77;
            rx: 30;
            ry: 18;
        }

        .node:not(.active) > rect, .node:not(.active) > .label {
            opacity: 0.4;
        }

        .edgePath:not(.active) path {
            opacity: 0.4;
        }

        .node.ellipsis > rect {
            fill: #CCC;
        }

        .node.intent > rect {
            fill: #7ff;
        }

        .node.dashed > rect {
            stroke-dasharray: 5;
        }

        text {
            font-weight: 300;
            font-family: "Helvetica Neue", Helvetica, Arial, sans-serf, serif;
            font-size: 14px;
            color: #1f1d1d;
        }

        .node rect {
            stroke: #444;
            fill: #fff;
            stroke-width: 1.5px;
        }

        .edgePath path {
            stroke: #333;
            stroke-width: 1.5px;
        }

        svg {
            position: fixed;
            top: 10px;
            left: 0;
            height: 100%;
            width: 100%
        }
    </style>
    <g></g>
</svg>
<script>

  function serveGraph() {
    let oldInputGraphValue;

    const url = 'visualization.dot';
    const refreshInterval = 500;

    // trigger a refresh by fetching an updated graph
    setInterval(function () {
      fetch(url).then(r => r.text()).then(dot => {
        document.getElementById('errormsg').innerHTML = '';
        if (oldInputGraphValue === dot) return;

        oldInputGraphValue = dot;
        drawGraph(dot);
      }).catch(err => {
        document.getElementById('errormsg').innerHTML =
          'Failed to update plot. (' + err.message + ')';
      });
    }, refreshInterval);
  }

  function drawGraph(graph) {
    let g = graphlibDot.read(graph);
    // Set margins, if not present
    if (!g.graph().hasOwnProperty("marginx") &&
      !g.graph().hasOwnProperty("marginy")) {
      g.graph().marginx = 20;
      g.graph().marginy = 20;
    }
    g.graph().transition = function (selection) {
      return selection.transition().duration(300);
    };
    // Render the graph into svg g
    d3.select("svg g").call(render, g);
  }
  // Set up zoom support
  const svg = d3.select("svg"),
    inner = d3.select("svg g"),
    zoom = d3.zoom().on("zoom", function () {
      inner.attr("transform", d3.event.transform);
    });
  svg.call(zoom);

  // Create and configure the renderer
  const render = dagreD3.render();

  let isClient = false;
  isClient = true;

  if (isClient) {
    // Mark all nodes and their edges as active
    cssRules = document.styleSheets[0].cssRules;
    cssRules[3].style.opacity = 1;
    cssRules[4].style.opacity = 1;

    let graph;
    graph = `digraph  {
0 [class="start active", fillcolor=green, fontsize=12, label=START, style=filled];
"-1" [class=end, fillcolor=red, fontsize=12, label=END, style=filled];
1 [class="", fontsize=12, label=utter_canthelp];
2 [class="", fontsize=12, label=action_chitchat];
3 [class="", fontsize=12, label=utter_nohelp];
4 [class="", fontsize=12, label=action_greet_user];
6 [class="", fontsize=12, label=utter_goodbye];
7 [class="", fontsize=12, label=utter_greet];
9 [class="", fontsize=12, label=action_chitchat];
12 [class="", fontsize=12, label=action_chitchat];
602 [class="", fontsize=12, label=action_chitchat];
603 [class="", fontsize=12, label=utter_getstarted];
604 [class="", fontsize=12, label=utter_explain_demonstratorcore];
605 [class="", fontsize=12, label=utter_explain_nlu];
606 [class="", fontsize=12, label=utter_explain_core];
607 [class="", fontsize=12, label=utter_explain_stack];
608 [class="", fontsize=12, label=utter_stack_details];
865 [class="", fontsize=12, label=action_chitchat];
1002 [class=intent, fillcolor=lightblue, label=canthelp, shape=rect, style=filled];
1003 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1004 [class=intent, fillcolor=lightblue, label=greet, shape=rect, style=filled];
1005 [class=intent, fillcolor=lightblue, label=goodbye, shape=rect, style=filled];
1006 [class=intent, fillcolor=lightblue, label=namenameTobi, shape=rect, style=filled];
1007 [class=intent, fillcolor=lightblue, label=ask_isbot, shape=rect, style=filled];
1008 [class=intent, fillcolor=lightblue, label=ask_howold, shape=rect, style=filled];
1009 [class=intent, fillcolor=lightblue, label=ask_languagesbot, shape=rect, style=filled];
1010 [class=intent, fillcolor=lightblue, label=ask_wherefrom, shape=rect, style=filled];
1011 [class=intent, fillcolor=lightblue, label=ask_whoami, shape=rect, style=filled];
1012 [class=intent, fillcolor=lightblue, label=handleinsult, shape=rect, style=filled];
1013 [class=intent, fillcolor=lightblue, label=nicetomeeyou, shape=rect, style=filled];
1014 [class=intent, fillcolor=lightblue, label=joke, shape=rect, style=filled];
1015 [class=intent, fillcolor=lightblue, label=ask_whatismyname, shape=rect, style=filled];
1016 [class=intent, fillcolor=lightblue, label=ask_howbuilt, shape=rect, style=filled];
1017 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1018 [class=intent, fillcolor=lightblue, label=ask_howdoing, shape=rect, style=filled];
1019 [class=intent, fillcolor=lightblue, label=ask_whoisit, shape=rect, style=filled];
1020 [class=intent, fillcolor=lightblue, label=ask_whatisdemonstrator, shape=rect, style=filled];
1021 [class=intent, fillcolor=lightblue, label=deny, shape=rect, style=filled];
1022 [class=intent, fillcolor=lightblue, label=canthelp, shape=rect, style=filled];
1023 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1024 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1025 [class=intent, fillcolor=lightblue, label=ask_howdoing, shape=rect, style=filled];
1026 [class=intent, fillcolor=lightblue, label=ask_whoisit, shape=rect, style=filled];
1027 [class=intent, fillcolor=lightblue, label=ask_whatisdemonstrator, shape=rect, style=filled];
1028 [class=intent, fillcolor=lightblue, label=ask_isbot, shape=rect, style=filled];
1029 [class=intent, fillcolor=lightblue, label=ask_howold, shape=rect, style=filled];
1030 [class=intent, fillcolor=lightblue, label=ask_languagesbot, shape=rect, style=filled];
1031 [class=intent, fillcolor=lightblue, label=ask_wherefrom, shape=rect, style=filled];
1032 [class=intent, fillcolor=lightblue, label=ask_whoami, shape=rect, style=filled];
1033 [class=intent, fillcolor=lightblue, label=handleinsult, shape=rect, style=filled];
1034 [class=intent, fillcolor=lightblue, label=nicetomeeyou, shape=rect, style=filled];
1035 [class=intent, fillcolor=lightblue, label=joke, shape=rect, style=filled];
1036 [class=intent, fillcolor=lightblue, label=ask_whatismyname, shape=rect, style=filled];
1037 [class=intent, fillcolor=lightblue, label=ask_howbuilt, shape=rect, style=filled];
1038 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1039 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1040 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1041 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1042 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1043 [class=intent, fillcolor=lightblue, label=ask_howdoing, shape=rect, style=filled];
1044 [class=intent, fillcolor=lightblue, label=ask_whoisit, shape=rect, style=filled];
1045 [class=intent, fillcolor=lightblue, label=ask_whatisdemonstrator, shape=rect, style=filled];
1046 [class=intent, fillcolor=lightblue, label=ask_isbot, shape=rect, style=filled];
1047 [class=intent, fillcolor=lightblue, label=ask_howold, shape=rect, style=filled];
1048 [class=intent, fillcolor=lightblue, label=ask_languagesbot, shape=rect, style=filled];
1049 [class=intent, fillcolor=lightblue, label=ask_wherefrom, shape=rect, style=filled];
1050 [class=intent, fillcolor=lightblue, label=ask_whoami, shape=rect, style=filled];
1051 [class=intent, fillcolor=lightblue, label=handleinsult, shape=rect, style=filled];
1052 [class=intent, fillcolor=lightblue, label=nicetomeeyou, shape=rect, style=filled];
1053 [class=intent, fillcolor=lightblue, label=joke, shape=rect, style=filled];
1054 [class=intent, fillcolor=lightblue, label=ask_whatismyname, shape=rect, style=filled];
1055 [class=intent, fillcolor=lightblue, label=ask_howbuilt, shape=rect, style=filled];
1056 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1057 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1058 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1059 [class=intent, fillcolor=lightblue, label=ask_howdoing, shape=rect, style=filled];
1060 [class=intent, fillcolor=lightblue, label=ask_whoisit, shape=rect, style=filled];
1061 [class=intent, fillcolor=lightblue, label=ask_whatisdemonstrator, shape=rect, style=filled];
1062 [class=intent, fillcolor=lightblue, label=ask_isbot, shape=rect, style=filled];
1063 [class=intent, fillcolor=lightblue, label=ask_howold, shape=rect, style=filled];
1064 [class=intent, fillcolor=lightblue, label=ask_languagesbot, shape=rect, style=filled];
1065 [class=intent, fillcolor=lightblue, label=ask_wherefrom, shape=rect, style=filled];
1066 [class=intent, fillcolor=lightblue, label=ask_whoami, shape=rect, style=filled];
1067 [class=intent, fillcolor=lightblue, label=handleinsult, shape=rect, style=filled];
1068 [class=intent, fillcolor=lightblue, label=nicetomeeyou, shape=rect, style=filled];
1069 [class=intent, fillcolor=lightblue, label=joke, shape=rect, style=filled];
1070 [class=intent, fillcolor=lightblue, label=ask_whatismyname, shape=rect, style=filled];
1071 [class=intent, fillcolor=lightblue, label=ask_howbuilt, shape=rect, style=filled];
1072 [class=intent, fillcolor=lightblue, label=ask_whatspossible, shape=rect, style=filled];
1073 [class=intent, fillcolor=lightblue, label=affirm, shape=rect, style=filled];
1074 [class=intent, fillcolor=lightblue, label=nicetomeeyou, shape=rect, style=filled];
1075 [class=intent, fillcolor=lightblue, label=joke, shape=rect, style=filled];
1076 [class=intent, fillcolor=lightblue, label=ask_whatismyname, shape=rect, style=filled];
1077 [class=intent, fillcolor=lightblue, label=ask_howbuilt, shape=rect, style=filled];
1078 [class=intent, fillcolor=lightblue, label=ask_builder, shape=rect, style=filled];
1079 [class=intent, fillcolor=lightblue, label=ask_howdoing, shape=rect, style=filled];
1080 [class=intent, fillcolor=lightblue, label=ask_whoisit, shape=rect, style=filled];
1081 [class=intent, fillcolor=lightblue, label=ask_whatisdemonstrator, shape=rect, style=filled];
1082 [class=intent, fillcolor=lightblue, label=ask_isbot, shape=rect, style=filled];
1083 [class=intent, fillcolor=lightblue, label=ask_howold, shape=rect, style=filled];
1084 [class=intent, fillcolor=lightblue, label=ask_languagesbot, shape=rect, style=filled];
1085 [class=intent, fillcolor=lightblue, label=ask_wherefrom, shape=rect, style=filled];
1086 [class=intent, fillcolor=lightblue, label=ask_whoami, shape=rect, style=filled];
1087 [class=intent, fillcolor=lightblue, label=handleinsult, shape=rect, style=filled];
1088 [class=intent, fillcolor=lightblue, label=deny, shape=rect, style=filled];
1089 [class=intent, fillcolor=lightblue, label=affirm, shape=rect, style=filled];
0 -> 1002  [class="", key=0];
0 -> 1003  [class="", key=0];
0 -> 1004  [class="", key=0];
0 -> 1005  [class="", key=0];
0 -> 1006  [class="", key=0];
0 -> 1007  [class="", key=0];
0 -> 1008  [class="", key=0];
0 -> 1009  [class="", key=0];
0 -> 1010  [class="", key=0];
0 -> 1011  [class="", key=0];
0 -> 1012  [class="", key=0];
0 -> 1013  [class="", key=0];
0 -> 1014  [class="", key=0];
0 -> 1015  [class="", key=0];
0 -> 1016  [class="", key=0];
0 -> 1017  [class="", key=0];
0 -> 1018  [class="", key=0];
0 -> 1019  [class="", key=0];
0 -> 1020  [class="", key=0];
1 -> "-1"  [class="", key=NONE, label=""];
2 -> "-1"  [class="", key=NONE, label=""];
2 -> 1021  [class="", key=0];
3 -> "-1"  [class="", key=NONE, label=""];
4 -> 1022  [class="", key=0];
4 -> 1023  [class="", key=0];
4 -> 1024  [class="", key=0];
4 -> 1025  [class="", key=0];
4 -> 1026  [class="", key=0];
4 -> 1027  [class="", key=0];
4 -> 1028  [class="", key=0];
4 -> 1029  [class="", key=0];
4 -> 1030  [class="", key=0];
4 -> 1031  [class="", key=0];
4 -> 1032  [class="", key=0];
4 -> 1033  [class="", key=0];
4 -> 1034  [class="", key=0];
4 -> 1035  [class="", key=0];
4 -> 1036  [class="", key=0];
4 -> 1037  [class="", key=0];
4 -> 1038  [class="", key=0];
4 -> 1039  [class="", key=0];
4 -> 1040  [class="", key=0];
6 -> "-1"  [class="", key=NONE, label=""];
7 -> "-1"  [class="", key=NONE, label=""];
9 -> "-1"  [class="", key=NONE, label=""];
9 -> 1041  [class="", key=0];
12 -> 1042  [class="", key=0];
12 -> 1043  [class="", key=0];
12 -> 1044  [class="", key=0];
12 -> 1045  [class="", key=0];
12 -> 1046  [class="", key=0];
12 -> 1047  [class="", key=0];
12 -> 1048  [class="", key=0];
12 -> 1049  [class="", key=0];
12 -> 1050  [class="", key=0];
12 -> 1051  [class="", key=0];
12 -> 1052  [class="", key=0];
12 -> 1053  [class="", key=0];
12 -> 1054  [class="", key=0];
12 -> 1055  [class="", key=0];
12 -> 1056  [class="", key=0];
12 -> 1057  [class="", key=0];
12 -> 1058  [class="", key=0];
12 -> 1059  [class="", key=0];
12 -> 1060  [class="", key=0];
12 -> 1061  [class="", key=0];
12 -> 1062  [class="", key=0];
12 -> 1063  [class="", key=0];
12 -> 1064  [class="", key=0];
12 -> 1065  [class="", key=0];
12 -> 1066  [class="", key=0];
12 -> 1067  [class="", key=0];
12 -> 1068  [class="", key=0];
12 -> 1069  [class="", key=0];
12 -> 1070  [class="", key=0];
12 -> 1071  [class="", key=0];
602 -> 1072  [class="", key=0];
603 -> 604  [class="", key=NONE, label=""];
604 -> 1073  [class="", key=0];
604 -> 1074  [class="", key=0];
604 -> 1075  [class="", key=0];
604 -> 1076  [class="", key=0];
604 -> 1077  [class="", key=0];
604 -> 1078  [class="", key=0];
604 -> 1079  [class="", key=0];
604 -> 1080  [class="", key=0];
604 -> 1081  [class="", key=0];
604 -> 1082  [class="", key=0];
604 -> 1083  [class="", key=0];
604 -> 1084  [class="", key=0];
604 -> 1085  [class="", key=0];
604 -> 1086  [class="", key=0];
604 -> 1087  [class="", key=0];
605 -> 606  [class="", key=NONE, label=""];
606 -> 1088  [class="", key=0];
607 -> 608  [class="", key=NONE, label=""];
608 -> "-1"  [class="", key=NONE, label=""];
865 -> 1089  [class="", key=0];
1002 -> 1  [class="", key=0];
1003 -> 2  [class="", key=0];
1004 -> 4  [class="", key=0];
1005 -> 6  [class="", key=0];
1006 -> 7  [class="", key=0];
1007 -> 9  [class="", key=0];
1008 -> 9  [class="", key=0];
1009 -> 9  [class="", key=0];
1010 -> 9  [class="", key=0];
1011 -> 9  [class="", key=0];
1012 -> 9  [class="", key=0];
1013 -> 9  [class="", key=0];
1014 -> 9  [class="", key=0];
1015 -> 9  [class="", key=0];
1016 -> 9  [class="", key=0];
1017 -> 9  [class="", key=0];
1018 -> 9  [class="", key=0];
1019 -> 9  [class="", key=0];
1020 -> 9  [class="", key=0];
1021 -> 3  [class="", key=0];
1022 -> 1  [class="", key=0];
1023 -> 9  [class="", key=0];
1024 -> 9  [class="", key=0];
1025 -> 12  [class="", key=0];
1026 -> 12  [class="", key=0];
1027 -> 12  [class="", key=0];
1028 -> 12  [class="", key=0];
1029 -> 12  [class="", key=0];
1030 -> 12  [class="", key=0];
1031 -> 12  [class="", key=0];
1032 -> 12  [class="", key=0];
1033 -> 12  [class="", key=0];
1034 -> 12  [class="", key=0];
1035 -> 12  [class="", key=0];
1036 -> 12  [class="", key=0];
1037 -> 12  [class="", key=0];
1038 -> 12  [class="", key=0];
1039 -> 12  [class="", key=0];
1040 -> 602  [class="", key=0];
1041 -> 9  [class="", key=0];
1042 -> 9  [class="", key=0];
1043 -> 9  [class="", key=0];
1044 -> 9  [class="", key=0];
1045 -> 9  [class="", key=0];
1046 -> 9  [class="", key=0];
1047 -> 9  [class="", key=0];
1048 -> 9  [class="", key=0];
1049 -> 9  [class="", key=0];
1050 -> 9  [class="", key=0];
1051 -> 9  [class="", key=0];
1052 -> 9  [class="", key=0];
1053 -> 9  [class="", key=0];
1054 -> 9  [class="", key=0];
1055 -> 9  [class="", key=0];
1056 -> 9  [class="", key=0];
1057 -> 602  [class="", key=0];
1058 -> 602  [class="", key=0];
1059 -> 602  [class="", key=0];
1060 -> 602  [class="", key=0];
1061 -> 602  [class="", key=0];
1062 -> 602  [class="", key=0];
1063 -> 602  [class="", key=0];
1064 -> 602  [class="", key=0];
1065 -> 602  [class="", key=0];
1066 -> 602  [class="", key=0];
1067 -> 602  [class="", key=0];
1068 -> 602  [class="", key=0];
1069 -> 602  [class="", key=0];
1070 -> 602  [class="", key=0];
1071 -> 602  [class="", key=0];
1072 -> 603  [class="", key=0];
1073 -> 605  [class="", key=0];
1074 -> 865  [class="", key=0];
1075 -> 865  [class="", key=0];
1076 -> 865  [class="", key=0];
1077 -> 865  [class="", key=0];
1078 -> 865  [class="", key=0];
1079 -> 865  [class="", key=0];
1080 -> 865  [class="", key=0];
1081 -> 865  [class="", key=0];
1082 -> 865  [class="", key=0];
1083 -> 865  [class="", key=0];
1084 -> 865  [class="", key=0];
1085 -> 865  [class="", key=0];
1086 -> 865  [class="", key=0];
1087 -> 865  [class="", key=0];
1088 -> 607  [class="", key=0];
1089 -> 605  [class="", key=0];
}
`;
    drawGraph(graph);
  } else {
    serveGraph();
  }


</script>
</body>
</html>
